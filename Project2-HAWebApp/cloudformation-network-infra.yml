Description: >
        Configuration of network infrastructure resources for CloudDevops Enigneer project 2

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    globalVpcCidr: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 192.168.0.0/16
    
    publicVpcSubnetCidr0:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 192.168.0.0/24

    publicVpcSubnetCidr1:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 192.168.1.0/24

    privateVpcSubnetCidr0:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 192.168.128.0/24

    privateVpcSubnetCidr1:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String
        Default: 192.168.129.0/24

    InstanceType:
        Description: Default Size EC2 Instance that will be used
        Type: String
      
    EbsVolumeSize:
        Description: Default EBS Volume Size that will be used
        Type: String


Resources:
    GlobalVpc:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref globalVpcCidr
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    
    PublicSubnet0: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref GlobalVpc
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref publicVpcSubnetCidr0
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Public-Subnet-AZ0

    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref GlobalVpc
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref publicVpcSubnetCidr1
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Public-Subnet-AZ1

    PrivateSubnet0: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref GlobalVpc
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref privateVpcSubnetCidr0
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Private-Subnet-AZ0

    PrivateSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref GlobalVpc
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref privateVpcSubnetCidr1
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Private-Subnet-AZ1

    InternetGateway:
            Type: AWS::EC2::InternetGateway
            Properties:
                Tags:
                    - Key: Name
                      Value: !Ref EnvironmentName
                
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref GlobalVpc


    NatGateway0EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc 
        
    NatGateway0: 
            Type: AWS::EC2::NatGateway
            Properties: 
                AllocationId: !GetAtt NatGateway0EIP.AllocationId
                SubnetId: !Ref PublicSubnet0

    NatGateway1: 
            Type: AWS::EC2::NatGateway
            Properties: 
                AllocationId: !GetAtt NatGateway1EIP.AllocationId
                SubnetId: !Ref PublicSubnet1

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref GlobalVpc
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Public-Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet0RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet0

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PrivateRouteTable0:
            Type: AWS::EC2::RouteTable
            Properties: 
                VpcId: !Ref GlobalVpc
                Tags: 
                    - Key: Name 
                      Value: !Sub ${EnvironmentName}-Private-Routes-AZ0

    DefaultPrivateRoute0:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable0
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway0

    PrivateSubnet0RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable0
            SubnetId: !Ref PrivateSubnet0

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref GlobalVpc
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Private-Routes-AZ1

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    WebServerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allows http access to our web servers
            VpcId: !Ref GlobalVpc
            SecurityGroupIngress:
            -   IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            -   IpProtocol: tcp
                FromPort: 0
                ToPort: 65535
                CidrIp: 0.0.0.0/0

    LoadBalancerSecurityGroup:
            Type: AWS::EC2::SecurityGroup
            Properties:
                GroupDescription: Allows http access to our load balancer
                VpcId: !Ref GlobalVpc
                SecurityGroupIngress:
                -   IpProtocol: tcp
                    FromPort: 80
                    ToPort: 80
                    CidrIp: 0.0.0.0/0
                SecurityGroupEgress:
                -   IpProtocol: tcp
                    FromPort: 80
                    ToPort: 80
                    CidrIp: 0.0.0.0/0

    
    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    apt-get update -y
                    apt-get install unzip awscli -y
                    apt-get install apache2 -y
                    systemctl start apache2.service
                    cd /var/www/html
                    aws s3 cp s3://udacity-demo-1/udacity.zip .
                    unzip -o udacity.zip
            ImageId: ami-005bdb005fb00e791
            SecurityGroups:
            - Ref: WebServerSecurityGroup
            InstanceType: t3.small
            BlockDeviceMappings:
            - DeviceName: "/dev/sdk"
              Ebs:
                 VolumeSize: !Ref EbsVolumeSize
    
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
            - !Ref PrivateSubnet0
            - !Ref PrivateSubnet1   
            LaunchConfigurationName:
                Ref: WebAppLaunchConfig
            MinSize: '4'
            MaxSize: '8'
            TargetGroupARNs:
            -   Ref: WebAppTargetGroup

    WebAppTargetGroup:
            Type: AWS::ElasticLoadBalancingV2::TargetGroup
            Properties:
                HealthCheckIntervalSeconds: 10
                HealthCheckPath: /
                HealthCheckProtocol: HTTP
                HealthCheckTimeoutSeconds: 5
                HealthyThresholdCount: 2
                Port: 80
                Protocol: HTTP
                UnhealthyThresholdCount: 5
                VpcId: !Ref GlobalVpc

    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            SecurityGroups:
            - Ref: LoadBalancerSecurityGroup
            Subnets:
            - !Ref PublicSubnet0
            - !Ref PublicSubnet1

    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
            -   Type: forward
                TargetGroupArn:
                    Ref: WebAppTargetGroup
            LoadBalancerArn:
                Ref: WebAppLB
            Port: '80'
            Protocol: HTTP

    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
            -   Type: forward
                TargetGroupArn: !Ref 'WebAppTargetGroup'
            Conditions:
            -   Field: path-pattern
                Values: [/]
            ListenerArn: !Ref 'Listener'
            Priority: 1



Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref GlobalVpc
        Export:
            Name: !Sub ${EnvironmentName}-VPCID

    VPCPublicRouteTable:
        Description: Public Routing
        Value: !Ref PublicRouteTable
        Export:
            Name: !Sub ${EnvironmentName}-PUB-RT

    VPCPrivateRouteTable0:
        Description: Private Routing AZ0
        Value: !Ref PrivateRouteTable0
        Export:
            Name: !Sub ${EnvironmentName}-PRI0-RT

    VPCPrivateRouteTable1:
        Description: Private Routing AZ1
        Value: !Ref PrivateRouteTable1
        Export:
            Name: !Sub ${EnvironmentName}-PRI1-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet0, !Ref PublicSubnet1 ]]
        Export:
            Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet0, !Ref PrivateSubnet1 ]]
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-NETS

    PublicSubnet0:
            Description: A reference to the public subnet in the 1st Availability Zone
            Value: !Ref PublicSubnet0
            Export:
                Name: !Sub ${EnvironmentName}-PUB0-SN

    PublicSubnet1: 
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PUB1-SN

    PrivateSubnet0:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet0
        Export:
            Name: !Sub ${EnvironmentName}-PRI0-SN

    PrivateSubnet1: 
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PRI1-SN  

    WebAppLoadBalancerDNSName:
        Description: Public URL of the Load Balancer
        Value: !Join [ "", [ 'http://', !GetAtt WebAppLB.DNSName ]]
        Export:
            Name: !Sub ${EnvironmentName}-PublicUrl
